#server:
#  port: 8080
#
#logging:
#  level:
#    org.springframework: DEBUG
#
#security:
#  user:
#    password: none
#    role: USER
#  oauth2:
#    client:
#      accessTokenUri: http://localhost:9999/uaa/oauth/token
#      userAuthorizationUri: http://localhost:9999/uaa/oauth/authorize
#      clientId: auth
#      clientSecret: authSecret
#    resource:
#      jwt:
#        keyValue: |
#          -----BEGIN PUBLIC KEY-----
#          MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnGp/Q5lh0P8nPL21oMMrt2RrkT9AW5jgYwLfSUnJVc9G6uR3cXRRDCjHqWU5WYwivcF180A6CWp/ireQFFBNowgc5XaA0kPpzEtgsA5YsNX7iSnUibB004iBTfU9hZ2Rbsc8cWqynT0RyN4TP1RYVSeVKvMQk4GT1r7JCEC+TNu1ELmbNwMQyzKjsfBXyIOCFU/E94ktvsTZUHF4Oq44DBylCDsS1k7/sfZC2G5EU7Oz0mhG8+Uz6MSEQHtoIi6mc8u64Rwi3Z3tscuWG2ShtsUFuNSAFNkY7LkLn+/hxLCu2bNISMaESa8dG22CIMuIeRLVcAmEWEWH5EEforTg+QIDAQAB
#          -----END PUBLIC KEY-----
server:
  port: 8081

# 스프링 시큐리티가 인증 토큰으로 쿠키를 받아들인다는 의미로 만일 이미 존재하지 않는다면 그들을 만들지 않을 것이다.
security:
  sessions: NEVER

logging:
  level:
    org.springframework: DEBUG

spring:
  redis:
    host: 70.50.169.219
    password: anyframe
    port: 6379
